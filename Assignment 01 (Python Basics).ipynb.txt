{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part -1 Python Basics (Variables)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Print Your Name with your Father name and Date of birth using suitable escape sequence charactor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name:Muhammad Ahsan Qureshi\n",
      "Fname: Muhammad Sohail Qureshi \n",
      "DoB:15-11-2006\n"
     ]
    }
   ],
   "source": [
    "print(\"Name:Muhammad Ahsan Qureshi\\nFname: Muhammad Sohail Qureshi \\nDoB:15-11-2006\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2. Write your small bio using variables and print it using print function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "I am BS student of Sir Syed University\n"
     ]
    }
   ],
   "source": [
    "bio = \"I am BS student of Sir Syed University\"\n",
    "print(bio)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "3. Write a program in which use all the operators we can use in Python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "add 22\n",
      "subtract -2\n",
      "multiply 120\n",
      "divide 0.8333333333333334\n",
      "floor division 0\n",
      "Modulus 10\n",
      "Exponential 100\n"
     ]
    }
   ],
   "source": [
    "a = 10\n",
    "b = 12\n",
    "# Add\n",
    "print(\"add\",a+b)\n",
    "print(\"subtract\",a-b)\n",
    "print(\"multiply\",a*b)\n",
    "print(\"divide\",a/b)\n",
    "print(\"floor division\",a//b)\n",
    "print(\"Modulus\",a%b)\n",
    "print(\"Exponential\",a**2)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4. Completes the following steps of small task:\n",
    "    - Mention Marks of English , Islamiat and Maths out of 100 in 3 different variables\n",
    "    - Mention Variable of Total Marks and assign 300 to it\n",
    "    - Calculate Percentage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "71.66666666666667\n"
     ]
    }
   ],
   "source": [
    "English,Islamiat,Maths = 60,65,90\n",
    "total = 300\n",
    "percentage = ((English + Islamiat + Maths)/total)*100\n",
    "print(percentage)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part -2 Python Basics (Conditional Statements)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1) A company decided to give bonus of 5% to employee if his/her year of service is more than 5 years.\n",
    "Ask user for their salary and year of service and print the net bonus amount."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the number of years of experiance 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "you are eligible for bouns\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter your current salary 15000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "your net bonus amount is: 750.0\n"
     ]
    }
   ],
   "source": [
    "experiance = int(input(\"Enter the number of years of experiance\"))\n",
    "if experiance >= 5:\n",
    "    print(\"you are eligible for bouns\")\n",
    "    salary = int(input(\"Enter your current salary\"))\n",
    "    bouns = (salary/100)*5\n",
    "    print(\"your net bonus amount is:\",bouns)\n",
    "else:\n",
    "    print(\"You are not eligible for the bonus\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "2) Write a program to check whether a person is eligible for voting or not. (accept age from user) if age is greater than 17 eligible otherwise not eligible"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter you age 18\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "you are eligible to vote\n"
     ]
    }
   ],
   "source": [
    "age = int(input(\"please enter you age\"))\n",
    "if age > 17:\n",
    "    print(\"you are eligible to vote\")\n",
    "else:\n",
    "    print(\"you are not eligible to vote\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "3) Write a program to check whether a number entered by user is even or odd."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter the number 10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Even Number\n"
     ]
    }
   ],
   "source": [
    "number = int(input(\"enter the number\"))\n",
    "if number % 2 == 0:\n",
    "    print(\"Even Number\")\n",
    "else:\n",
    "    print(\"Odd Number\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4) Write a program to check whether a number is divisible by 7 or not.\n",
    "Show Answer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter a number 7\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yes! 7 is divisible by 7\n"
     ]
    }
   ],
   "source": [
    "number =  int(input(\"please enter a number\"))\n",
    "\n",
    "if number % 7 == 0:\n",
    "    print(f\"yes! {number} is divisible by 7\")\n",
    "else:\n",
    "    print(f\"No! {number} is not divisible by 7\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "5) Write a program to display \n",
    "\"Hello\" if a number entered by user is a multiple of five , otherwise print \"Bye\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter a number 10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n"
     ]
    }
   ],
   "source": [
    "number =  int(input(\"please enter a number\"))\n",
    "if number % 5 == 0:\n",
    "    print(\"Hello\")\n",
    "else:\n",
    "    print(\"Bye\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "7) Write a program to display the last digit of a number.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter a number 27849\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n"
     ]
    }
   ],
   "source": [
    "number =  input(\"please enter a number\")\n",
    "last_digit = int(number[-1])\n",
    "print(last_digit)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "9) Take values of length and breadth of a rectangle from user and print if it is square or rectangle."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter length 8\n",
      "please enter breadth 8\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Suquare\n"
     ]
    }
   ],
   "source": [
    "length =  int(input(\"please enter length\"))\n",
    "breadth =  int(input(\"please enter breadth\"))\n",
    "\n",
    "if length == breadth:\n",
    "    print(\"Suquare\")\n",
    "elif length != 0 and breadth != 0:\n",
    "    print(\"Rectangle\")\n",
    "else:\n",
    "    print(\"wrong values\")\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "10) Take two int values from user and print greatest among them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter 1st number 10\n",
      "please enter 2nd number 2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n"
     ]
    }
   ],
   "source": [
    "num1 =  int(input(\"please enter 1st number\"))\n",
    "num2 =  int(input(\"please enter 2nd number\"))\n",
    "\n",
    "if num1 > num2:\n",
    "    print(num1)\n",
    "else:\n",
    "    print(num2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "11) A shop will give discount of 10% if the cost of purchased quantity is more than 1000.\n",
    "Ask user for quantity\n",
    "Suppose, one unit will cost 100.\n",
    "Judge and print total cost for user."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter length 11\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "your amount is 1100\n",
      "After 10% discount , your total is 990.0\n"
     ]
    }
   ],
   "source": [
    "quantity =  int(input(\"please enter length\"))*100\n",
    "\n",
    "if quantity > 1000:\n",
    "    total_amount = (quantity / 100)*90\n",
    "    print(f\"your amount is {quantity}\\nAfter 10% discount , your total is {total_amount}\")\n",
    "else:\n",
    "    print(f\"your total amount is {quantity}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "12) A school has following rules for grading system:\n",
    "\n",
    "a. Below 25 - F\n",
    "\n",
    "b. 25 to 45 - E\n",
    "\n",
    "c. 45 to 50 - D\n",
    "\n",
    "d. 50 to 60 - C\n",
    "\n",
    "e. 60 to 80 - B\n",
    "\n",
    "f. Above 80 - A\n",
    "\n",
    "Ask user to enter marks and print the corresponding grade."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Please enter your marks 24\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your grade: F\n"
     ]
    }
   ],
   "source": [
    "marks = int(input(\"Please enter your marks\"))\n",
    "if marks >= 80:\n",
    "    print(\"Your grade: A\")\n",
    "elif marks >= 60:\n",
    "    print(\"Your grade: B\")\n",
    "elif marks >= 50:\n",
    "    print(\"Your grade: C\")\n",
    "elif marks >= 45:\n",
    "    print(\"Your grade: D\")\n",
    "elif marks >= 25:\n",
    "    print(\"Your grade: E\")\n",
    "else:\n",
    "    print(\"Your grade: F\")\n",
    "    \n",
    "    \n",
    "    \n",
    "            "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "14)A student will not be allowed to sit in exam if his/her attendence is less than 75%.\n",
    "\n",
    "Take following input from user\n",
    "\n",
    "- Number of classes held\n",
    "\n",
    "- Number of classes attended.\n",
    "\n",
    "And print\n",
    "\n",
    "- percentage of class attended\n",
    "\n",
    "- Is student is allowed to sit in exam or not.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How many classes are held?  45\n",
      "How many classes you have attended?  30\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorry!, You are not allowed to sit in exam because your attendence is less than 75%,\n",
      "Your attendence % : 66.66666666666666\n"
     ]
    }
   ],
   "source": [
    "no_of_classes_held = int(input(\"How many classes are held? \"))\n",
    "no_of_classes_attended = int(input(\"How many classes you have attended? \"))\n",
    "\n",
    "attendence_percentage = (no_of_classes_attended / no_of_classes_held) * 100\n",
    "\n",
    "if attendence_percentage > 75:\n",
    "    print(\"Congrats!, You are allowed to sit in exam.\")\n",
    "else:\n",
    "    print(f\"Sorry!, You are not allowed to sit in exam because your attendence is less than 75%,\\nYour attendence % : {attendence_percentage}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "15) Modify the above question to allow student to sit if he/she has medical cause. Ask user if he/she has medical cause or not ( 'Y' or 'N' ) and print accordingly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How many classes are held?  45\n",
      "How many classes you have attended?  33\n",
      "Your attendence is short, Did You have any medical issue? Y/N: y\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You are allowd to sit in exam on medical grounds!,\n",
      " Kindly bring medical records with you.\n"
     ]
    }
   ],
   "source": [
    "no_of_classes_held = int(input(\"How many classes are held? \"))\n",
    "no_of_classes_attended = int(input(\"How many classes you have attended? \"))\n",
    "\n",
    "attendence_percentage = (no_of_classes_attended / no_of_classes_held) * 100\n",
    "\n",
    "if attendence_percentage > 75:\n",
    "    print(\"Congrats!, You are allowed to sit in exam.\")\n",
    "else:\n",
    "    medical_issue = input(\"Your attendence is short, Did You have any medical issue? Y/N:\" ).lower()\n",
    "    if medical_issue == \"y\":\n",
    "        print(\"You are allowd to sit in the exams on medical grounds!,\\n Kindly bring your medical records on exam day.\")\n",
    "    else:\n",
    "        print(f\"Sorry!, You are not allowed to sit in exam because your attendence is less than 75%,\\nYour attendence % : {attendence_percentage}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "16) Write a program to check if a year is leap year or not.\n",
    "\n",
    "If a year is divisible by 4 then it is leap year but if the year is century year like 2000, 1900, 2100 then it must be divisible by 400."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Please enter the year:  1900\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1900 is NOT a Leap year\n"
     ]
    }
   ],
   "source": [
    "year = int(input(\"Please enter the year: \"))\n",
    "\n",
    "if year % 400 == 0:\n",
    "    print(f\"{year} is a Leap year\")\n",
    "elif year % 100 == 0:\n",
    "    print(f\"{year} is NOT a Leap year\")\n",
    "elif year % 4 == 0:\n",
    "    print(f\"{year} is a Leap year\")\n",
    "else:\n",
    "    print(f\"{year} is NOT a Leap year\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "17) Ask user to enter age, gender ( M or F ), marital status ( Y or N ) and then using following rules print their place of service.\n",
    "\n",
    "if employee is female, then she will work only in urban areas.\n",
    "\n",
    "if employee is a male and age is in between 20 to 40 then he may work in anywhere\n",
    "\n",
    "if employee is male and age is in between 40 t0 60 then he will work in urban areas only.\n",
    "\n",
    "And any other input of age should print \"ERROR\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Please enter you age:  40\n",
      "Enter you gender M or F:  m\n",
      "Are you married? Y/N y\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Male having age b/w 40 and 60 can work in Urban areas\n"
     ]
    }
   ],
   "source": [
    "age = int(input(\"Please enter you age: \"))\n",
    "gender = input(\"Enter you gender M or F: \").lower()\n",
    "marital_status = input(\"Are you married? Y/N\").lower()\n",
    "\n",
    "if 20 > age or age > 60:\n",
    "    print(\"ERROR\")\n",
    "elif gender == \"f\":\n",
    "    print(\"Female can work in Urban areas only\")\n",
    "elif gender == \"m\" and 20 <= age < 40:\n",
    "    print(\"Male having age b/w 20 and 40 can work anywhere\")\n",
    "elif gender == \"m\" and 40 <= age <= 60:\n",
    "    print(\"Male having age b/w 40 and 60 can work in Urban areas\")\n",
    "\n",
    "else:\n",
    "    print(\"Something went wrong!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "17. Write a program to calculate the electricity bill (accept number of unit from user) according to the following criteria :\n",
    "     Unit                                                     Price  \n",
    "uptp 100 units                                             no charge\n",
    "Next 200 units                                              Rs 5 per unit\n",
    "After 200 units                                             Rs 10 per unit\n",
    "(For example if input unit is 350 than total bill amount is Rs.3500\n",
    "(For example if input unit is 97 than total bill amount is Rs.0\n",
    "(For example if input unit is 150 than total bill amount is Rs.750"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter units used:  201\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your bill amount is Rs:2010\n"
     ]
    }
   ],
   "source": [
    "units = int(input(\"Enter units used: \"))\n",
    "\n",
    "if units <= 100:\n",
    "    bill_amount = units * 0\n",
    "    print(f\"Your bill amount is Rs:{bill_amount}\")\n",
    "elif units > 200:\n",
    "    bill_amount = units * 10\n",
    "    print(f\"Your bill amount is Rs:{bill_amount}\")\n",
    "else:\n",
    "    bill_amount = units * 5\n",
    "    print(f\"Your bill amount is Rs:{bill_amount}\")\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "18. Take input of age of 3 people by user and determine oldest and youngest among them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Please enter age1:  20\n",
      "Please enter age2:  17\n",
      "Please enter age3:  13\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The youngest age among three is: 13\n",
      "The oldest age among three is: 20\n"
     ]
    }
   ],
   "source": [
    "age1 = int(input(\"Please enter age1: \"))\n",
    "age2 = int(input(\"Please enter age2: \"))\n",
    "age3 = int(input(\"Please enter age3: \"))\n",
    "\n",
    "if age1 > age2 and age1 > age3 :\n",
    "    oldest = age1\n",
    "elif age2 > age1 and age2 > age3:\n",
    "    oldest = age2\n",
    "else:\n",
    "    oldest = age3\n",
    "\n",
    "if age1 < age2 and age1 < age3:\n",
    "    youngest = age1\n",
    "elif age2 < age1 and age2 < age3:\n",
    "    youngest = age2\n",
    "else:\n",
    "    youngest = age3\n",
    "\n",
    "print(f\"The youngest age among three is: {youngest}\")\n",
    "print(f\"The oldest age among three is: {oldest}\")\n",
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
